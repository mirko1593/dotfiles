set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g default-terminal 'screen-256color'
unbind C-b
set -g prefix C-n

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# smart pane switching with awareness of Vim Splits
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

set-option -g status-keys "emacs"

set-option -g status-bg "#666666"
set-option -g status-fg "#aaaaaa"

set-option -g status-left-length 50
set-option -g status-right " #(date '+%A, %D - %I:%M') "

# create new pane
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key v split-window -v -c '#{pane_current_path}' 'vim $(fzf)'

# resize pane
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
# prefix z  : toggle zooming current pane


# create new window
bind c new-window -c '#{pane_current_path}'
# kill current window, and kill session if current window is last window
bind k kill-window -t :=            

# detach pane and move to new window
bind-key b break-pane -d        
# prompted join-pane
bind-key j command-prompt -p "join page from: " "join-pane -h -s '%%'"
# prompted to swap pane
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"



# make C-j display a selectable list of sessions
# bind-key C-j choose-tree        
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# kill current session and jump to next session without leaving tmux
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'


# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

set -g mouse on

set -g @scroll-without-changing-pane "off"

# let tmux cpoy mode interact with OSX clipboard
# use vim keybindings in copy mode
setw -g mode-keys vi

# set 'v' to begin selection as in vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# set default binding of Enter to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'



set -g @plugin 'nhdaly/tmux-better-mouse-mode'



run '~/.tmux/plugins/tpm/tpm'


# Tips:
# prefix o  : jump to another pane
# prefix %  : vsplit
# prefix "  : split
# C-d       : destroy current pane
#           : will destroy current buffer if last window was destroyed
# prefix d  : detach from current session
# prefix 0/1   : jump to window with NO. 0/1
###: These two lines are used to set window number 1-based
# set-option -g base-index 1
# set-option -g renumber-windows on
# prefix l  : jump between two windows
# prefix L  : jump between two sessions
# tmux list-sessions  : list all sessions
# tmux choose-tree    : list all session iteractively, space to show windows
# prefix [  : enter copy mode
# prefix :   : enter command mode of Tmux
#
###: usage of man page:
# tmux list-commands
#   :can /search-item in man page
# tmux list-keys    
#   : dump live current key-binds
# prefix ?  : will run "tmux list-keys" and overlay temporary pane with copy mode
